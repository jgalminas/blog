import Page from '../../components/Page.js'
import { Fragment } from 'react';
import Head from 'next/head';
import { getRelatedPosts, postFilePaths, POSTS_PATH } from '../../utils/mdxUtil.js';
import { serialize } from 'next-mdx-remote/serialize'
import { MDXRemote } from 'next-mdx-remote'
import { readFileSync } from 'fs';
import path from 'path';
import PostCard from '../../components/PostCard.js';

import Image from 'next/image';

import CodeBlock from '../../components/CodeBlock.js';
import RelatedPost from '../../components/RelatedPost.js';

const components = { CodeBlock };

export default function Post({ content, relatedPosts }) {

    const frontmatter = content?.frontmatter;

    return (
        <Fragment>

        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <Page>
          {content &&
            <div className="post">
            <Image className='img' src={frontmatter.img} layout='responsive' height="70%" width="100%"/>
            <MDXRemote components={components} {...content}/>


            {/* Make these span the whole width and move image to left side */}
            <h1 align="middle"> Related Posts </h1>
            


            <div className='flex col related-posts'>
              {relatedPosts.map((post) => {
                  return <RelatedPost key={post.slug} post={post}></RelatedPost>
                })}
            </div>

            </div>
          }

        </Page>
      </Fragment>
    )
}

export async function getStaticPaths() {
  
  const paths = postFilePaths
  .map((path) => path.replace(/\.mdx?$/, '')) // Remove file extensions for page paths
  .map((slug) => ({ params: { slug } })) // Map the path into the static paths object required by Next.js

  return {
    paths,
    fallback: true,
  }
}

export async function getStaticProps({ params }) {

  const postFilePath = path.join(POSTS_PATH, `${params.slug}.mdx`)
  const post = readFileSync(postFilePath);

  // Convert MDX to JSX
  const content = await serialize(post , { parseFrontmatter: true });

  const { frontmatter } = content;
  const relatedPosts = await getRelatedPosts(frontmatter.slug, frontmatter.tags);

  return {
    props: {
      content,
      relatedPosts
    },
  }
}